{"ast":null,"code":"var _jsxFileName = \"/Users/mattlaws/personal/spotify_react/src/components/Main.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authorize } from \"../scripts.js\";\nimport \"./styles/Main.css\";\nimport placeholder_playlist from \"./images/placeholder_playlist.png\";\n\n// TODO allow fo playlist searching (get category playlist)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_data = await authorize();\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n// Decode the access token\n\n// .then(response => response.json())\n// .then(data => {\n//   // Handle the response data\n//   console.log(data);\n// })\n// .catch(error => {\n//   // Handle any errors\n//   console.error('Error:', error);\n// });\n\n// const get_songs = (playlist_id) => {\n//   fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n//     method: 'GET',\n//     headers: {\n//       'Authorization': `Bearer ${accessToken}`\n//     }\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       // data contains the tracks in the playlist\n//       console.log(data);\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });//}, []);\n\n// }\n\nconst get_available_devices = async () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/player/devices', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n};\n_s(get_available_devices, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\nconst playPlaylist = async playlistId => {\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        context_uri: `spotify:playlist:${playlistId}`\n        // context_uri: `spotify:track:4iV5W9uYEdYUVa79Axb7Rh`,\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to play playlist');\n    }\n    console.log('Playlist is now playing');\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst handle_playlist_click = playlist_id => {\n  playPlaylist(playlist_id);\n};\nconst get_playlist = playlist_json => {\n  var _playlist_json$images, _playlist_json$images2;\n  // Assuming accessToken is the access token\n  // const [data, setData] = useState(null);\n\n  // useEffect(() => {\n  // const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"playlist_image\",\n      onClick: handle_playlist_click.bind(null, playlist_json.id),\n      src: (_playlist_json$images = (_playlist_json$images2 = playlist_json.images[0]) === null || _playlist_json$images2 === void 0 ? void 0 : _playlist_json$images2.url) !== null && _playlist_json$images !== void 0 ? _playlist_json$images : placeholder_playlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"playlist_name\",\n      children: playlist_json.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 7\n  }, this);\n};\nconst Playlist_select = () => {\n  _s2();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n\n  // data ? console.log(data.items[4]) : console.log(\"pending\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist_select\",\n    children: data ? data.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist\",\n      children: get_playlist(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)) : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s2(Playlist_select, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Playlist_select;\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"head\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"headerItem\",\n      id: \"title\",\n      children: \" Spotify Song Trivia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"headerItem\",\n      id: \"profile_img\",\n      src: profile_data.profileImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"headerItem\",\n      id: \"username\",\n      children: [\" \", profile_data.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n\n// const PlayPlaylistButton = (playlistId) => {\n//   const playPlaylist = async () => {\n//     try {\n//       const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n//         method: 'PUT',\n//         headers: {\n//           'Authorization': `Bearer ${accessToken}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           context_uri: `spotify:playlist:${playlistId}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to play playlist');\n//       }\n\n//       console.log('Playlist is now playing');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <button onClick={playPlaylist}>\n//       Play Playlist\n//     </button>\n//   );\n// };\n_c2 = Header;\nconst Main = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Playlist_select, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Main;\nexport default Main;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Playlist_select\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","authorize","placeholder_playlist","jsxDEV","_jsxDEV","user_data","profile_data","profile","accessToken","get_available_devices","_s","data","setData","fetch","headers","then","response","json","catch","error","console","playPlaylist","playlistId","method","body","JSON","stringify","context_uri","ok","Error","log","handle_playlist_click","playlist_id","get_playlist","playlist_json","_playlist_json$images","_playlist_json$images2","children","className","onClick","bind","id","src","images","url","fileName","_jsxFileName","lineNumber","columnNumber","name","Playlist_select","_s2","items","map","item","index","_c","Header","profileImage","displayName","_c2","Main","_c3","$RefreshReg$"],"sources":["/Users/mattlaws/personal/spotify_react/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {authorize} from \"../scripts.js\"\nimport \"./styles/Main.css\"\nimport placeholder_playlist from \"./images/placeholder_playlist.png\"\n\n\n\n// TODO allow fo playlist searching (get category playlist)\n\nconst user_data = await authorize();\n\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n// Decode the access token\n\n\n  // .then(response => response.json())\n  // .then(data => {\n  //   // Handle the response data\n  //   console.log(data);\n  // })\n  // .catch(error => {\n  //   // Handle any errors\n  //   console.error('Error:', error);\n  // });\n\n// const get_songs = (playlist_id) => {\n//   fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n//     method: 'GET',\n//     headers: {\n//       'Authorization': `Bearer ${accessToken}`\n//     }\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       // data contains the tracks in the playlist\n//       console.log(data);\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });//}, []);\n  \n// }\n\n\nconst get_available_devices = async () => {\n  const [data, setData] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/player/devices', {\nheaders: {\n  'Authorization': `Bearer ${accessToken}`\n}\n})\n      .then(response => response.json())\n      .then(json => setData(json))\n      .catch(error => console.error(error));\n  }, []);\n}\n\nconst playPlaylist = async (playlistId) => {\n  \n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        context_uri: `spotify:playlist:${playlistId}`,\n        // context_uri: `spotify:track:4iV5W9uYEdYUVa79Axb7Rh`,\n\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to play playlist');\n    }\n\n    console.log('Playlist is now playing');\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n\nconst handle_playlist_click = (playlist_id) => {\n  playPlaylist(playlist_id)\n}\n\n\nconst get_playlist = (playlist_json) => {\n\n\n  // Assuming accessToken is the access token\n// const [data, setData] = useState(null);\n  \n// useEffect(() => {\n// const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n\n  // console.log(data)\n\n    \n    return (\n      <div>\n        <img className='playlist_image' onClick={handle_playlist_click.bind(null, playlist_json.id)} src={playlist_json.images[0]?.url ?? placeholder_playlist}></img>\n        <p className='playlist_name'>{playlist_json.name}</p>\n        \n      </div>\n    );\n  };\n\n\nconst Playlist_select = () => {\n  const [data, setData] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\nheaders: {\n  'Authorization': `Bearer ${accessToken}`\n}\n})\n      .then(response => response.json())\n      .then(json => setData(json))\n      .catch(error => console.error(error));\n  }, []);\n  \n  // data ? console.log(data.items[4]) : console.log(\"pending\")\n  \n\n  \n\n  return (\n    <div id=\"playlist_select\">\n      {/* {data ? <pre>{JSON.stringify(data, null, 2)}</pre> : 'Loading...'} */}\n      {/* {data ? <pre>{get_playlist(data.items[0])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[2])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[3])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[5])}</pre> : 'Loading...'} */}\n      {/* {data ? <pre>{JSON.(data.items[5], null, 2)}</pre> : 'Loading...'} */}\n\n\n      {data ? data.items.map((item, index) => (\n        <div className=\"playlist\" key={index}>{ get_playlist(item)}</div>\n      )) : 'Loading...'}\n\n    </div>\n\n  );\n}\n\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return (\n        <div id=\"head\">\n            {/* <section id=\"profile\"> */}\n            <h1 className=\"headerItem\" id=\"title\"> Spotify Song Trivia</h1>\n            <img className=\"headerItem\"  id=\"profile_img\" src={profile_data.profileImage} />\n\n            <h2 className=\"headerItem\"  id=\"username\"> {profile_data.displayName}</h2> \n            {/* <ul> */}\n                {/* <li>User ID: <span id=\"id\"></span></li> */}\n                {/* <li>Email: {profile_data.email}</li> */}\n            {/* </ul> */}\n            {/* </section> */}\n\n        </div>\n  );\n}\n\n\n\n// const PlayPlaylistButton = (playlistId) => {\n//   const playPlaylist = async () => {\n//     try {\n//       const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n//         method: 'PUT',\n//         headers: {\n//           'Authorization': `Bearer ${accessToken}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           context_uri: `spotify:playlist:${playlistId}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to play playlist');\n//       }\n\n//       console.log('Playlist is now playing');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <button onClick={playPlaylist}>\n//       Play Playlist\n//     </button>\n//   );\n// };\n\n\n\nconst Main = () => {\n  return (\n    <div>\n      <Header />\n      <Playlist_select />\n\n\n    </div>\n  )\n  }\n\n\n\n\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}