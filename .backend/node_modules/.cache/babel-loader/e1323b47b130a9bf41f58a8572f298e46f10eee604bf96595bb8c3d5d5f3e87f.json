{"ast":null,"code":"var _jsxFileName = \"/Users/mattlaws/personal/spotify_react/src/components/Main.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authorize } from \"../scripts.js\";\nimport \"./styles/Main.css\";\nimport placeholder_playlist from \"./images/placeholder_playlist.png\";\n\n// TODO allow fo playlist searching (get category playlist)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_data = await authorize();\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n// Decode the access token\n\n// .then(response => response.json())\n// .then(data => {\n//   // Handle the response data\n//   console.log(data);\n// })\n// .catch(error => {\n//   // Handle any errors\n//   console.error('Error:', error);\n// });\n\n// const get_songs = (playlist_id) => {\n//   fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n//     method: 'GET',\n//     headers: {\n//       'Authorization': `Bearer ${accessToken}`\n//     }\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       // data contains the tracks in the playlist\n//       console.log(data);\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });//}, []);\n\n// }\n\nconst Get_available_devices = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/player/devices', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n  console.log(data);\n};\n_s(Get_available_devices, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Get_available_devices;\nconst GetCurrentSongData = async () => {\n  try {\n    var _data$item, _data$item2, _data$item3;\n    const response = await fetch(`https://api.spotify.com/v1/me/player/currently-playing`, {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    const data = await response.json();\n    // console.log(data); // This will log the data to the console\n\n    // Return the current song data\n    return {\n      \"duration\": data === null || data === void 0 ? void 0 : (_data$item = data.item) === null || _data$item === void 0 ? void 0 : _data$item.duration_ms,\n      \"artists\": data === null || data === void 0 ? void 0 : (_data$item2 = data.item) === null || _data$item2 === void 0 ? void 0 : _data$item2.artists,\n      \"name\": data === null || data === void 0 ? void 0 : (_data$item3 = data.item) === null || _data$item3 === void 0 ? void 0 : _data$item3.name\n    };\n  } catch (error) {\n    console.error('Error:', error);\n    return null; // Return null or handle the error as needed\n  }\n};\n_c2 = GetCurrentSongData;\nconst GetNextSongData = async () => {\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/next`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to skip');\n    }\n    console.log('skipped');\n    try {\n      var _data$item4, _data$item5, _data$item6;\n      const response = await fetch(`https://api.spotify.com/v1/me/player/currently-playing`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      const data = await response.json();\n      // console.log(data); // This will log the data to the console\n\n      // Return the current song data\n      return {\n        \"duration\": data === null || data === void 0 ? void 0 : (_data$item4 = data.item) === null || _data$item4 === void 0 ? void 0 : _data$item4.duration_ms,\n        \"artists\": data === null || data === void 0 ? void 0 : (_data$item5 = data.item) === null || _data$item5 === void 0 ? void 0 : _data$item5.artists,\n        \"name\": data === null || data === void 0 ? void 0 : (_data$item6 = data.item) === null || _data$item6 === void 0 ? void 0 : _data$item6.name\n      };\n    } catch (error) {\n      console.error('Error:', error);\n      return null; // Return null or handle the error as needed\n    }\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n_c3 = GetNextSongData;\nconst playPlaylist = async playlistId => {\n  // Get_available_devices()\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        context_uri: `spotify:playlist:${playlistId}`\n        // context_uri: `spotify:track:4iV5W9uYEdYUVa79Axb7Rh`,\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to play playlist');\n    }\n    console.log('Playlist is now playing');\n    // Get_current_song_data()\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\nconst handle_playlist_click = playlist_id => {\n  playPlaylist(playlist_id);\n};\nconst GetPlaylist = playlist_json => {\n  var _playlist_json$images, _playlist_json$images2;\n  // Assuming accessToken is the access token\n  // const [data, setData] = useState(null);\n\n  // useEffect(() => {\n  // const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n  // console.log(data)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"playlist_image\",\n      onClick: handle_playlist_click.bind(null, playlist_json.id),\n      src: (_playlist_json$images = (_playlist_json$images2 = playlist_json.images[0]) === null || _playlist_json$images2 === void 0 ? void 0 : _playlist_json$images2.url) !== null && _playlist_json$images !== void 0 ? _playlist_json$images : placeholder_playlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"playlist_name\",\n      children: playlist_json.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 7\n  }, this);\n};\n_c4 = GetPlaylist;\nconst PlaylistSelect = () => {\n  _s2();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n\n  // data ? console.log(data.items[4]) : console.log(\"pending\")\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playlist_select\",\n    children: data ? data.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"playlist\",\n      children: GetPlaylist(item)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }, this)) : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s2(PlaylistSelect, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c5 = PlaylistSelect;\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"head\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"headerItem\",\n      id: \"title\",\n      children: \" Spotify Song Trivia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"headerItem\",\n      id: \"profile_img\",\n      src: profile_data.profileImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"headerItem\",\n      id: \"username\",\n      children: [\" \", profile_data.displayName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n_c6 = Header;\nconst Skip = async () => {\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/next`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to skip');\n    }\n    console.log('skipped');\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n_c7 = Skip;\nconst Shuffle = async () => {\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/shuffle?state=true`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to shuffle');\n    }\n    console.log('shuffling enabled');\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n_c8 = Shuffle;\nconst NextQuestion = async () => {\n  const song_data = await GetNextSongData();\n  // Get_available_devices()\n  console.log(song_data);\n  // await Skip()\n\n  // Skip()\n};\n\n// const Get_devices = async () => {\n//     try {\n//         const response = await fetch(`https://api.spotify.com/v1/me/player/devices`, {\n//           method: 'GET',\n//           headers: {\n//             'Authorization': `Bearer ${accessToken}`,\n//           },\n//         });\n\n//         if (!response.ok) {\n//           throw new Error('Failed to get devices');\n//         }\n\n//         console.log('shuffling enabled');\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n// }\n_c9 = NextQuestion;\nconst Game = () => {\n  Shuffle();\n  Get_available_devices();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: NextQuestion,\n      children: \"Skip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 9\n  }, this);\n};\n\n// const PlayPlaylistButton = (playlistId) => {\n//   const playPlaylist = async () => {\n//     try {\n//       const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n//         method: 'PUT',\n//         headers: {\n//           'Authorization': `Bearer ${accessToken}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           context_uri: `spotify:playlist:${playlistId}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to play playlist');\n//       }\n\n//       console.log('Playlist is now playing');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <button onClick={playPlaylist}>\n//       Play Playlist\n//     </button>\n//   );\n// };\n_c10 = Game;\nconst Main = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlaylistSelect, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_c11 = Main;\nexport default Main;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Get_available_devices\");\n$RefreshReg$(_c2, \"GetCurrentSongData\");\n$RefreshReg$(_c3, \"GetNextSongData\");\n$RefreshReg$(_c4, \"GetPlaylist\");\n$RefreshReg$(_c5, \"PlaylistSelect\");\n$RefreshReg$(_c6, \"Header\");\n$RefreshReg$(_c7, \"Skip\");\n$RefreshReg$(_c8, \"Shuffle\");\n$RefreshReg$(_c9, \"NextQuestion\");\n$RefreshReg$(_c10, \"Game\");\n$RefreshReg$(_c11, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","authorize","placeholder_playlist","jsxDEV","_jsxDEV","user_data","profile_data","profile","accessToken","Get_available_devices","_s","data","setData","fetch","headers","then","response","json","catch","error","console","log","_c","GetCurrentSongData","_data$item","_data$item2","_data$item3","item","duration_ms","artists","name","_c2","GetNextSongData","method","ok","Error","_data$item4","_data$item5","_data$item6","_c3","playPlaylist","playlistId","body","JSON","stringify","context_uri","handle_playlist_click","playlist_id","GetPlaylist","playlist_json","_playlist_json$images","_playlist_json$images2","children","className","onClick","bind","id","src","images","url","fileName","_jsxFileName","lineNumber","columnNumber","_c4","PlaylistSelect","_s2","items","map","index","_c5","Header","profileImage","displayName","_c6","Skip","_c7","Shuffle","_c8","NextQuestion","song_data","_c9","Game","_c10","Main","_c11","$RefreshReg$"],"sources":["/Users/mattlaws/personal/spotify_react/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {authorize} from \"../scripts.js\"\nimport \"./styles/Main.css\"\nimport placeholder_playlist from \"./images/placeholder_playlist.png\"\n\n\n\n// TODO allow fo playlist searching (get category playlist)\n\nconst user_data = await authorize();\n\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n// Decode the access token\n\n\n  // .then(response => response.json())\n  // .then(data => {\n  //   // Handle the response data\n  //   console.log(data);\n  // })\n  // .catch(error => {\n  //   // Handle any errors\n  //   console.error('Error:', error);\n  // });\n\n// const get_songs = (playlist_id) => {\n//   fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n//     method: 'GET',\n//     headers: {\n//       'Authorization': `Bearer ${accessToken}`\n//     }\n//   })\n//     .then(response => response.json())\n//     .then(data => {\n//       // data contains the tracks in the playlist\n//       console.log(data);\n//     })\n//     .catch(error => {\n//       console.error('Error:', error);\n//     });//}, []);\n  \n// }\n\n\nconst Get_available_devices = () => {\n  const [data, setData] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/player/devices', {\nheaders: {\n  'Authorization': `Bearer ${accessToken}`\n}\n})\n      .then(response => response.json())\n      .then(json => setData(json))\n      .catch(error => console.error(error));\n  }, []);\n\n  console.log(data)\n}\n\n\nconst GetCurrentSongData = async () => {\n    try {\n        const response = await fetch(`https://api.spotify.com/v1/me/player/currently-playing`, {\n            headers: {\n                'Authorization': `Bearer ${accessToken}`\n            }\n        });\n        const data = await response.json();\n        // console.log(data); // This will log the data to the console\n\n        // Return the current song data\n        return {\n            \"duration\": data?.item?.duration_ms,\n            \"artists\": data?.item?.artists,\n            \"name\": data?.item?.name,\n        };\n    } catch (error) {\n        console.error('Error:', error);\n        return null; // Return null or handle the error as needed\n    }\n};\n\nconst GetNextSongData = async () => {\n    try {\n        const response = await fetch(`https://api.spotify.com/v1/me/player/next`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n          },\n        });\n    \n        if (!response.ok) {\n          throw new Error('Failed to skip');\n        }\n    \n        console.log('skipped');\n        try {\n            const response = await fetch(`https://api.spotify.com/v1/me/player/currently-playing`, {\n                headers: {\n                    'Authorization': `Bearer ${accessToken}`\n                }\n            });\n            const data = await response.json();\n            // console.log(data); // This will log the data to the console\n    \n            // Return the current song data\n            return {\n                \"duration\": data?.item?.duration_ms,\n                \"artists\": data?.item?.artists,\n                \"name\": data?.item?.name,\n            };\n        } catch (error) {\n            console.error('Error:', error);\n            return null; // Return null or handle the error as needed\n        }\n\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    \n};\n\n\n\nconst playPlaylist = async (playlistId) => {\n  // Get_available_devices()\n  try {\n    const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        context_uri: `spotify:playlist:${playlistId}`,\n        // context_uri: `spotify:track:4iV5W9uYEdYUVa79Axb7Rh`,\n\n      }),\n    });\n\n    if (!response.ok) {\n      throw new Error('Failed to play playlist');\n    }\n\n    console.log('Playlist is now playing');\n    // Get_current_song_data()\n\n  } catch (error) {\n    console.error('Error:', error);\n  }\n};\n\nconst handle_playlist_click = (playlist_id) => {\n\n  playPlaylist(playlist_id)\n\n}\n\n\nconst GetPlaylist = (playlist_json) => {\n\n\n  // Assuming accessToken is the access token\n// const [data, setData] = useState(null);\n  \n// useEffect(() => {\n// const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n\n  // console.log(data)\n\n    \n    return (\n      <div>\n        <img className='playlist_image' onClick={handle_playlist_click.bind(null, playlist_json.id)} src={playlist_json.images[0]?.url ?? placeholder_playlist}></img>\n        <p className='playlist_name'>{playlist_json.name}</p>\n        \n      </div>\n    );\n  };\n\n\nconst PlaylistSelect = () => {\n  const [data, setData] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=50&offset=0', {\nheaders: {\n  'Authorization': `Bearer ${accessToken}`\n}\n})\n      .then(response => response.json())\n      .then(json => setData(json))\n      .catch(error => console.error(error));\n  }, []);\n  \n  // data ? console.log(data.items[4]) : console.log(\"pending\")\n  \n\n  \n\n  return (\n    <div id=\"playlist_select\">\n      {/* {data ? <pre>{JSON.stringify(data, null, 2)}</pre> : 'Loading...'} */}\n      {/* {data ? <pre>{get_playlist(data.items[0])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[2])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[3])}</pre> : 'Loading...'}\n      {data ? <pre>{get_playlist(data.items[5])}</pre> : 'Loading...'} */}\n      {/* {data ? <pre>{JSON.(data.items[5], null, 2)}</pre> : 'Loading...'} */}\n\n\n      {data ? data.items.map((item, index) => (\n        <div className=\"playlist\" key={index}>{ GetPlaylist(item)}</div>\n      )) : 'Loading...'}\n\n    </div>\n\n  );\n}\n\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return (\n        <div id=\"head\">\n            {/* <section id=\"profile\"> */}\n            <h1 className=\"headerItem\" id=\"title\"> Spotify Song Trivia</h1>\n            <img className=\"headerItem\"  id=\"profile_img\" src={profile_data.profileImage} />\n\n            <h2 className=\"headerItem\"  id=\"username\"> {profile_data.displayName}</h2> \n            {/* <ul> */}\n                {/* <li>User ID: <span id=\"id\"></span></li> */}\n                {/* <li>Email: {profile_data.email}</li> */}\n            {/* </ul> */}\n            {/* </section> */}\n\n        </div>\n  );\n}\n\nconst Skip = async () => {\n    try {\n        const response = await fetch(`https://api.spotify.com/v1/me/player/next`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n          },\n        });\n    \n        if (!response.ok) {\n          throw new Error('Failed to skip');\n        }\n    \n        console.log('skipped');\n\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      \n}\n\nconst Shuffle = async () => {\n    try {\n        const response = await fetch(`https://api.spotify.com/v1/me/player/shuffle?state=true`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`,\n          },\n        });\n    \n        if (!response.ok) {\n          throw new Error('Failed to shuffle');\n        }\n    \n        console.log('shuffling enabled');\n      } catch (error) {\n        console.error('Error:', error);\n      }\n}\n\nconst NextQuestion = async () => {\n    const song_data = await GetNextSongData();\n    // Get_available_devices()\n    console.log(song_data);\n    // await Skip()\n\n    // Skip()\n\n\n    \n\n}\n\n// const Get_devices = async () => {\n//     try {\n//         const response = await fetch(`https://api.spotify.com/v1/me/player/devices`, {\n//           method: 'GET',\n//           headers: {\n//             'Authorization': `Bearer ${accessToken}`,\n//           },\n//         });\n    \n//         if (!response.ok) {\n//           throw new Error('Failed to get devices');\n//         }\n    \n//         console.log('shuffling enabled');\n//       } catch (error) {\n//         console.error('Error:', error);\n//       }\n// }\n\nconst Game = () => {\n    Shuffle()\n    Get_available_devices()\n    return (\n        <div>\n            <button onClick={NextQuestion}>Skip</button>\n        </div>\n    )\n}\n\n// const PlayPlaylistButton = (playlistId) => {\n//   const playPlaylist = async () => {\n//     try {\n//       const response = await fetch(`https://api.spotify.com/v1/me/player/play`, {\n//         method: 'PUT',\n//         headers: {\n//           'Authorization': `Bearer ${accessToken}`,\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           context_uri: `spotify:playlist:${playlistId}`,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error('Failed to play playlist');\n//       }\n\n//       console.log('Playlist is now playing');\n//     } catch (error) {\n//       console.error('Error:', error);\n//     }\n//   };\n\n//   return (\n//     <button onClick={playPlaylist}>\n//       Play Playlist\n//     </button>\n//   );\n// };\n\n\n\nconst Main = () => {\n\n\n  return (\n    <div>\n      <Header />\n      <PlaylistSelect />\n      <Game />\n\n\n    </div>\n  )\n  }\n\n\n\n\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}