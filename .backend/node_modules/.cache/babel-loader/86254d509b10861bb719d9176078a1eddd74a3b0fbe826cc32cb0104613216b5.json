{"ast":null,"code":"var _jsxFileName = \"/Users/mattlaws/personal/spotify_react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from \"./components/Home.jsx\";\nimport { redirectToAuthCodeFlow, getAccessToken } from \"./scripts.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = \"poop\"; // Replace with your client id\n\nfunction App() {\n  _s();\n  const [accessToken, setAccessToken] = useState('');\n  const [refreshToken, setRefreshToken] = useState('');\n  useEffect(() => {\n    const storedAccessToken = localStorage.getItem('accessToken');\n    const storedRefreshToken = localStorage.getItem('refreshToken');\n    const storedTokenExpiration = localStorage.getItem('tokenExpiration');\n    if (storedAccessToken && storedRefreshToken && storedTokenExpiration) {\n      if (Date.now() < parseInt(storedTokenExpiration, 10)) {\n        setAccessToken(storedAccessToken);\n        setRefreshToken(storedRefreshToken);\n      } else {\n        // Token is expired, refresh it\n        getAccessToken(clientId, storedRefreshToken).then(newAccessToken => {\n          setAccessToken(newAccessToken);\n          localStorage.setItem('accessToken', newAccessToken);\n          localStorage.setItem('tokenExpiration', (Date.now() + 3600000).toString()); // Assuming tokens expire in 1 hour (3600000 ms)\n        }).catch(error => {\n          console.error(\"Error refreshing token:\", error);\n          // Handle error, e.g., redirect to authentication flow\n          redirectToAuthCodeFlow(clientId);\n        });\n      }\n    } else {\n      // Redirect to authentication flow\n      redirectToAuthCodeFlow(clientId);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hyay6U/S3fDK1FjlFKORaPgfw4A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","redirectToAuthCodeFlow","getAccessToken","jsxDEV","_jsxDEV","clientId","App","_s","accessToken","setAccessToken","refreshToken","setRefreshToken","storedAccessToken","localStorage","getItem","storedRefreshToken","storedTokenExpiration","Date","now","parseInt","then","newAccessToken","setItem","toString","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mattlaws/personal/spotify_react/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from \"./components/Home.jsx\"\nimport { redirectToAuthCodeFlow, getAccessToken } from \"./scripts.js\"\n\nconst clientId = \"poop\"; // Replace with your client id\n\n\nfunction App() {\n    const [accessToken, setAccessToken] = useState('');\n    const [refreshToken, setRefreshToken] = useState('');\n\n    useEffect(() => {\n        const storedAccessToken = localStorage.getItem('accessToken');\n        const storedRefreshToken = localStorage.getItem('refreshToken');\n        const storedTokenExpiration = localStorage.getItem('tokenExpiration');\n\n        if (storedAccessToken && storedRefreshToken && storedTokenExpiration) {\n            if (Date.now() < parseInt(storedTokenExpiration, 10)) {\n                setAccessToken(storedAccessToken);\n                setRefreshToken(storedRefreshToken);\n            } else {\n                // Token is expired, refresh it\n                getAccessToken(clientId, storedRefreshToken)\n                    .then(newAccessToken => {\n                        setAccessToken(newAccessToken);\n                        localStorage.setItem('accessToken', newAccessToken);\n                        localStorage.setItem('tokenExpiration', (Date.now() + 3600000).toString()); // Assuming tokens expire in 1 hour (3600000 ms)\n                    })\n                    .catch(error => {\n                        console.error(\"Error refreshing token:\", error);\n                        // Handle error, e.g., redirect to authentication flow\n                        redirectToAuthCodeFlow(clientId);\n                    });\n            }\n        } else {\n            // Redirect to authentication flow\n            redirectToAuthCodeFlow(clientId);\n        }\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <Home />\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,uBAAuB;AACxC,SAASC,sBAAsB,EAAEC,cAAc,QAAQ,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,QAAQ,GAAG,MAAM,CAAC,CAAC;;AAGzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAMa,iBAAiB,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC7D,MAAMC,kBAAkB,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC/D,MAAME,qBAAqB,GAAGH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAErE,IAAIF,iBAAiB,IAAIG,kBAAkB,IAAIC,qBAAqB,EAAE;MAClE,IAAIC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAGC,QAAQ,CAACH,qBAAqB,EAAE,EAAE,CAAC,EAAE;QAClDP,cAAc,CAACG,iBAAiB,CAAC;QACjCD,eAAe,CAACI,kBAAkB,CAAC;MACvC,CAAC,MAAM;QACH;QACAb,cAAc,CAACG,QAAQ,EAAEU,kBAAkB,CAAC,CACvCK,IAAI,CAACC,cAAc,IAAI;UACpBZ,cAAc,CAACY,cAAc,CAAC;UAC9BR,YAAY,CAACS,OAAO,CAAC,aAAa,EAAED,cAAc,CAAC;UACnDR,YAAY,CAACS,OAAO,CAAC,iBAAiB,EAAE,CAACL,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,OAAO,EAAEK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAChF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;UACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;UAC/C;UACAxB,sBAAsB,CAACI,QAAQ,CAAC;QACpC,CAAC,CAAC;MACV;IACJ,CAAC,MAAM;MACH;MACAJ,sBAAsB,CAACI,QAAQ,CAAC;IACpC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACID,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAChBxB,OAAA,CAACJ,IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd;AAACzB,EAAA,CAtCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}