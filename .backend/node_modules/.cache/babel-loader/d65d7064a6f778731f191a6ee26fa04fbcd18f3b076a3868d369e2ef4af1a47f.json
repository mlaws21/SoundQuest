{"ast":null,"code":"const clientId = \"379e50830b614f5da69a1b198f950418\"; // Replace with your client id\nconst CALLBACK = \"http://localhost:3000/callback\";\nconst params = new URLSearchParams(window.location.search);\nconst code = params.get(\"code\");\n\n// function populateUI(profile: UserProfile) {\n//     document.getElementById(\"displayName\")!.innerText = profile.display_name;\n//     if (profile.images[0]) {\n//         const profileImage = new Image(200, 200);\n//         profileImage.src = profile.images[0].url;\n//         document.getElementById(\"avatar\")!.appendChild(profileImage);\n//     }\n//     document.getElementById(\"id\")!.innerText = profile.id;\n//     document.getElementById(\"email\")!.innerText = profile.email;\n//     document.getElementById(\"uri\")!.innerText = profile.uri;\n//     document.getElementById(\"uri\")!.setAttribute(\"href\", profile.external_urls.spotify);\n//     document.getElementById(\"url\")!.innerText = profile.href;\n//     document.getElementById(\"url\")!.setAttribute(\"href\", profile.href);\n//     document.getElementById(\"imgUrl\")!.innerText = profile.images[0]?.url ?? '(no profile image)';\n// }\n\nfunction outputUI(profile) {\n  // document.getElementById(\"displayName\")!.innerText = profile.display_name;\n  // if (profile.images[0]) {\n  const profileImage = new Image(200, 200);\n  profileImage.src = profile.images[0].url;\n\n  // profileImage.src = profile.images[0]?.url ?? 'placeholder.jpg';\n\n  //     document.getElementById(\"avatar\")!.appendChild(profileImage);\n  // }\n\n  // const image = profile.images[0]?.url ?? '(no profile image)'\n  return {\n    displayName: profile.display_name,\n    id: profile.id,\n    email: profile.email,\n    uri: profile.uri,\n    profileImage: profileImage\n  };\n}\nasync function fetchProfile(token) {\n  const result = await fetch(\"https://api.spotify.com/v1/me\", {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await result.json();\n}\n\n// if (!code) {\n//     redirectToAuthCodeFlow(clientId);\n// } else {\n//     const accessToken = await getAccessToken(clientId, code);\n//     const profile = await fetchProfile(accessToken);\n//     console.log(profile); // Profile data logs to console\n\n//     populateUI(profile);\n// }\n\nexport async function redirectToAuthCodeFlow(clientId) {\n  const verifier = generateCodeVerifier(128);\n  const challenge = await generateCodeChallenge(verifier);\n  localStorage.setItem(\"verifier\", verifier);\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"response_type\", \"code\");\n  params.append(\"redirect_uri\", CALLBACK);\n  params.append(\"scope\", \"user-read-private user-read-email\");\n  params.append(\"code_challenge_method\", \"S256\");\n  params.append(\"code_challenge\", challenge);\n  document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\nasync function getAccessToken(clientId, code) {\n  const verifier = localStorage.getItem(\"verifier\");\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"grant_type\", \"authorization_code\");\n  params.append(\"code\", code);\n  params.append(\"redirect_uri\", CALLBACK);\n  params.append(\"code_verifier\", verifier);\n  const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    },\n    body: params\n  });\n  const {\n    access_token,\n    expires_in\n  } = await result.json();\n  const expirationTime = Date.now() + expires_in * 1000; // Convert seconds to milliseconds\n\n  localStorage.setItem('accessToken', access_token);\n  localStorage.setItem('tokenExpiration', expirationTime.toString());\n  return access_token;\n}\nfunction generateCodeVerifier(length) {\n  let text = '';\n  let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  const data = new TextEncoder().encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest('SHA-256', data);\n  return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\nexport async function authorize() {\n  const clientId = \"379e50830b614f5da69a1b198f950418\";\n  const params = new URLSearchParams(window.location.search);\n  const code = params.get(\"code\");\n  if (!code) {\n    redirectToAuthCodeFlow(clientId);\n    return;\n  }\n  const accessToken = await getAccessToken(clientId, code);\n  const profile = await fetchProfile(accessToken);\n  console.log(profile); // Profile data logs to console\n\n  return outputUI;\n}\n\n// if (!isTokenValid()) {\n//     main();\n// }","map":{"version":3,"names":["clientId","CALLBACK","params","URLSearchParams","window","location","search","code","get","outputUI","profile","profileImage","Image","src","images","url","displayName","display_name","id","email","uri","fetchProfile","token","result","fetch","method","headers","Authorization","json","redirectToAuthCodeFlow","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","append","document","toString","getAccessToken","getItem","body","access_token","expires_in","expirationTime","Date","now","length","text","possible","i","charAt","Math","floor","random","codeVerifier","data","TextEncoder","encode","digest","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","authorize","accessToken","console","log"],"sources":["/Users/mattlaws/personal/spotify_react/src/scripts.js"],"sourcesContent":["\nconst clientId = \"379e50830b614f5da69a1b198f950418\"; // Replace with your client id\nconst CALLBACK = \"http://localhost:3000/callback\"\n\nconst params = new URLSearchParams(window.location.search);\nconst code = params.get(\"code\");\n\n// function populateUI(profile: UserProfile) {\n//     document.getElementById(\"displayName\")!.innerText = profile.display_name;\n//     if (profile.images[0]) {\n//         const profileImage = new Image(200, 200);\n//         profileImage.src = profile.images[0].url;\n//         document.getElementById(\"avatar\")!.appendChild(profileImage);\n//     }\n//     document.getElementById(\"id\")!.innerText = profile.id;\n//     document.getElementById(\"email\")!.innerText = profile.email;\n//     document.getElementById(\"uri\")!.innerText = profile.uri;\n//     document.getElementById(\"uri\")!.setAttribute(\"href\", profile.external_urls.spotify);\n//     document.getElementById(\"url\")!.innerText = profile.href;\n//     document.getElementById(\"url\")!.setAttribute(\"href\", profile.href);\n//     document.getElementById(\"imgUrl\")!.innerText = profile.images[0]?.url ?? '(no profile image)';\n// }\n\nfunction outputUI(profile) {\n    // document.getElementById(\"displayName\")!.innerText = profile.display_name;\n    // if (profile.images[0]) {\n    const profileImage = new Image(200, 200);\n    profileImage.src = profile.images[0].url;\n\n    // profileImage.src = profile.images[0]?.url ?? 'placeholder.jpg';\n\n\n    //     document.getElementById(\"avatar\")!.appendChild(profileImage);\n    // }\n\n    // const image = profile.images[0]?.url ?? '(no profile image)'\n    return {\n        displayName: profile.display_name,\n        id: profile.id,\n        email: profile.email,\n        uri: profile.uri,\n        profileImage: profileImage,\n    };\n\n}\n\nasync function fetchProfile(token) {\n    const result = await fetch(\"https://api.spotify.com/v1/me\", {\n        method: \"GET\", headers: { Authorization: `Bearer ${token}` }\n    });\n\n    return await result.json();\n}\n\n// if (!code) {\n//     redirectToAuthCodeFlow(clientId);\n// } else {\n//     const accessToken = await getAccessToken(clientId, code);\n//     const profile = await fetchProfile(accessToken);\n//     console.log(profile); // Profile data logs to console\n    \n//     populateUI(profile);\n// }\n\n\n\n\nexport async function redirectToAuthCodeFlow(clientId) {\n    const verifier = generateCodeVerifier(128);\n    const challenge = await generateCodeChallenge(verifier);\n\n    localStorage.setItem(\"verifier\", verifier);\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"response_type\", \"code\");\n    params.append(\"redirect_uri\", CALLBACK);\n    params.append(\"scope\", \"user-read-private user-read-email\");\n    params.append(\"code_challenge_method\", \"S256\");\n    params.append(\"code_challenge\", challenge);\n\n    document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\n\n\nasync function getAccessToken(clientId, code) {\n    const verifier = localStorage.getItem(\"verifier\");\n\n    const params = new URLSearchParams();\n    params.append(\"client_id\", clientId);\n    params.append(\"grant_type\", \"authorization_code\");\n    params.append(\"code\", code);\n    params.append(\"redirect_uri\", CALLBACK);\n    params.append(\"code_verifier\", verifier);\n\n    const result = await fetch(\"https://accounts.spotify.com/api/token\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        body: params\n    });\n\n    const { access_token, expires_in } = await result.json();\n    const expirationTime = Date.now() + expires_in * 1000; // Convert seconds to milliseconds\n\n    localStorage.setItem('accessToken', access_token);\n    localStorage.setItem('tokenExpiration', expirationTime.toString());\n\n    return access_token;\n}\n\n\nfunction generateCodeVerifier(length) {\n    let text = '';\n    let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (let i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n}\n\nasync function generateCodeChallenge(codeVerifier) {\n    const data = new TextEncoder().encode(codeVerifier);\n    const digest = await window.crypto.subtle.digest('SHA-256', data);\n    return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n        .replace(/=+$/, '');\n}\n\n\nexport async function authorize() {\n    const clientId = \"379e50830b614f5da69a1b198f950418\";\n    const params = new URLSearchParams(window.location.search);\n    const code = params.get(\"code\");\n\n    if (!code) {\n        redirectToAuthCodeFlow(clientId);\n        return;\n    }\n\n    const accessToken = await getAccessToken(clientId, code);\n    \n    const profile = await fetchProfile(accessToken);\n    console.log(profile); // Profile data logs to console\n    \n    return outputUI;\n}\n\n// if (!isTokenValid()) {\n//     main();\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}