{"ast":null,"code":"var _jsxFileName = \"/Users/mattlaws/personal/spotify_react/src/components/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { authorize } from \"../scripts.js\";\nimport \"./styles/Main.css\";\n\n// TODO allow fo playlist searching (get category playlist)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst user_data = await authorize();\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n// .then(response => response.json())\n// .then(data => {\n//   // Handle the response data\n//   console.log(data);\n// })\n// .catch(error => {\n//   // Handle any errors\n//   console.error('Error:', error);\n// });\n\nconst get_songs = playlist_id => {\n  fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  }).then(response => response.json()).then(data => {\n    // data contains the tracks in the playlist\n    console.log(data);\n  }).catch(error => {\n    console.error('Error:', error);\n  }); //}, []);\n};\nconst get_playlist = playlist_json => {\n  var _playlist_json$images, _playlist_json$images2;\n  // Assuming accessToken is the access token\n  // const [data, setData] = useState(null);\n\n  // useEffect(() => {\n  // const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n  // console.log(data)\n\n  const handle_playlist_click = () => {\n    console.log(playlist_json.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"playlist\",\n      onClick: handle_playlist_click,\n      src: (_playlist_json$images = (_playlist_json$images2 = playlist_json.images[0]) === null || _playlist_json$images2 === void 0 ? void 0 : _playlist_json$images2.url) !== null && _playlist_json$images !== void 0 ? _playlist_json$images : 'placeholder_playlist.jpg'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: playlist_json.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\nconst Playlist_select = () => {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=20&offset=0', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`\n      }\n    }).then(response => response.json()).then(json => setData(json)).catch(error => console.error(error));\n  }, []);\n  data ? console.log(data.items[4]) : console.log(\"pending\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: get_playlist(data.items[4])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this) : 'Loading...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Playlist_select, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Playlist_select;\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"head\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"title\",\n        children: \" Spotify Song Trivia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"username\",\n        children: [\" \", profile_data.displayName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"profile_img\",\n        src: profile_data.profileImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n}\n_c2 = Header;\nconst Main = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Main;\nexport default Main;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Playlist_select\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","authorize","jsxDEV","_jsxDEV","user_data","profile_data","profile","accessToken","get_songs","playlist_id","fetch","method","headers","then","response","json","data","console","log","catch","error","get_playlist","playlist_json","_playlist_json$images","_playlist_json$images2","handle_playlist_click","id","children","className","onClick","src","images","url","fileName","_jsxFileName","lineNumber","columnNumber","name","Playlist_select","_s","setData","items","_c","Header","displayName","profileImage","_c2","Main","_c3","$RefreshReg$"],"sources":["/Users/mattlaws/personal/spotify_react/src/components/Main.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {authorize} from \"../scripts.js\"\nimport \"./styles/Main.css\"\n\n// TODO allow fo playlist searching (get category playlist)\n\nconst user_data = await authorize();\n\nconst profile_data = user_data.profile;\nconst accessToken = user_data.accessToken;\n\n  // .then(response => response.json())\n  // .then(data => {\n  //   // Handle the response data\n  //   console.log(data);\n  // })\n  // .catch(error => {\n  //   // Handle any errors\n  //   console.error('Error:', error);\n  // });\n\nconst get_songs = (playlist_id) => {\n  fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, {\n    method: 'GET',\n    headers: {\n      'Authorization': `Bearer ${accessToken}`\n    }\n  })\n    .then(response => response.json())\n    .then(data => {\n      // data contains the tracks in the playlist\n      console.log(data);\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });//}, []);\n  \n}\n\nconst get_playlist = (playlist_json) => {\n\n\n  // Assuming accessToken is the access token\n// const [data, setData] = useState(null);\n  \n// useEffect(() => {\n// const playlistId = 'PLAYLIST_ID'; // Replace PLAYLIST_ID with the ID of your playlist\n\n\n  // console.log(data)\n\n\n\n\n\n\n    const handle_playlist_click = () => {\n      console.log(playlist_json.id)\n    }\n\n    \n    return (\n      <div>\n        <img className='playlist' onClick={handle_playlist_click} src={playlist_json.images[0]?.url ?? 'placeholder_playlist.jpg'}></img>\n        <p>{playlist_json.name}</p>\n        \n      </div>\n    );\n  };\n\n\nconst Playlist_select = () => {\n  const [data, setData] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://api.spotify.com/v1/me/playlists?limit=20&offset=0', {\nheaders: {\n  'Authorization': `Bearer ${accessToken}`\n}\n})\n      .then(response => response.json())\n      .then(json => setData(json))\n      .catch(error => console.error(error));\n  }, []);\n  \n  data ? console.log(data.items[4]) : console.log(\"pending\")\n  \n\n  \n\n  return (\n    <div>\n      {/* {data ? <pre>{JSON.stringify(data, null, 2)}</pre> : 'Loading...'} */}\n      {data ? <pre>{get_playlist(data.items[4])}</pre> : 'Loading...'}\n\n\n\n\n    </div>\n  );\n}\n\nfunction Header() {\n  // displayName: profile.display_name,\n  // id: profile.id,\n  // email: profile.email,\n  // uri: profile.uri,\n  // profileImage: profileImage\n  return (\n        <div id=\"head\">\n            <section id=\"profile\">\n            <h1 id=\"title\"> Spotify Song Trivia</h1>\n            <h2 id=\"username\"> {profile_data.displayName}</h2> \n            <img className={\"profile_img\"} src={profile_data.profileImage} />\n            <ul>\n                {/* <li>User ID: <span id=\"id\"></span></li> */}\n                {/* <li>Email: {profile_data.email}</li> */}\n            </ul>\n            </section>\n\n        </div>\n  );\n}\n\n\nconst Main = () => {\n  return (\n    <div>\n      <Header />\n      {/* <Playlist_select /> */}\n\n\n    </div>\n  )\n  }\n\n\n\n\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}